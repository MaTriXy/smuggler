buildscript {
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintrayVersion"
  }
}

apply plugin: "kotlin"
apply plugin: "com.jfrog.bintray"
apply plugin: "maven-publish"

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

  compile "commons-io:commons-io:$commonsIoVersion"
  compile "com.google.guava:guava:$guavaVersion"

  compile "org.ow2.asm:asm:$asmVersion"
  compile "org.ow2.asm:asm-commons:$asmVersion"
  compile "org.ow2.asm:asm-util:$asmVersion"

  compile "org.slf4j:slf4j-api:$slf4jVersion"
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId POM_GROUP
      artifactId POM_ARTIFACT_ID
      version POM_VERSION_NAME

      artifact sourceJar
      artifact javadocJar

      pom.withXml {
        asNode().dependencies.'*'.findAll {
          it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
            dep.name == it.artifactId.text()
          }
        } each {
          it.scope*.value = 'compile'
        }
      }

      from components.java
    }
  }
}

bintray {
  user = System.getenv("BINTRAY_USERNAME")
  key = System.getenv("BINTRAY_PASSWORD")

  pkg {
    repo = BINTRAY_REPO
    name = BINTRAY_PACKAGE

    version {
      name = POM_VERSION_NAME
    }
  }

  publications = ['mavenJava']
}

task sourceJar(type: Jar) {
  classifier "sources"
  from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
  classifier "javadoc"
  from javadoc.destinationDir
}
